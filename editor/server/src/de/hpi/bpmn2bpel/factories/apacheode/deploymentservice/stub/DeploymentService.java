
package de.hpi.bpmn2bpel.factories.apacheode.deploymentservice.stub;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.3.1-hudson-417-SNAPSHOT
 * Generated source version: 2.1
 * 
 */
@WebServiceClient(name = "DeploymentService", targetNamespace = "http://www.apache.org/ode/deployapi", wsdlLocation = "http://localhost:8080/ode/processes/DeploymentService?wsdl")
public class DeploymentService
    extends Service
{

    private final static URL DEPLOYMENTSERVICE_WSDL_LOCATION;
    private final static Logger logger = Logger.getLogger(de.hpi.bpmn2bpel.factories.apacheode.deploymentservice.stub.DeploymentService.class.getName());

    static {
        URL url = null;
        try {
            URL baseUrl;
            baseUrl = de.hpi.bpmn2bpel.factories.apacheode.deploymentservice.stub.DeploymentService.class.getResource(".");
            url = new URL(baseUrl, "http://localhost:8080/ode/processes/DeploymentService?wsdl");
        } catch (MalformedURLException e) {
            logger.warning("Failed to create URL for the wsdl Location: 'http://localhost:8080/ode/processes/DeploymentService?wsdl', retrying as a local file");
            logger.warning(e.getMessage());
        }
        DEPLOYMENTSERVICE_WSDL_LOCATION = url;
    }

    public DeploymentService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public DeploymentService() {
        super(DEPLOYMENTSERVICE_WSDL_LOCATION, new QName("http://www.apache.org/ode/deployapi", "DeploymentService"));
    }

    /**
     * 
     * @return
     *     returns DeploymentServicePortType
     */
    @WebEndpoint(name = "DeploymentServiceSOAP11port_http")
    public DeploymentServicePortType getDeploymentServiceSOAP11PortHttp() {
        return super.getPort(new QName("http://www.apache.org/ode/deployapi", "DeploymentServiceSOAP11port_http"), DeploymentServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns DeploymentServicePortType
     */
    @WebEndpoint(name = "DeploymentServiceSOAP11port_http")
    public DeploymentServicePortType getDeploymentServiceSOAP11PortHttp(WebServiceFeature... features) {
        return super.getPort(new QName("http://www.apache.org/ode/deployapi", "DeploymentServiceSOAP11port_http"), DeploymentServicePortType.class, features);
    }

    /**
     * 
     * @return
     *     returns DeploymentServicePortType
     */
    @WebEndpoint(name = "DeploymentServiceSOAP12port_http")
    public DeploymentServicePortType getDeploymentServiceSOAP12PortHttp() {
        return super.getPort(new QName("http://www.apache.org/ode/deployapi", "DeploymentServiceSOAP12port_http"), DeploymentServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns DeploymentServicePortType
     */
    @WebEndpoint(name = "DeploymentServiceSOAP12port_http")
    public DeploymentServicePortType getDeploymentServiceSOAP12PortHttp(WebServiceFeature... features) {
        return super.getPort(new QName("http://www.apache.org/ode/deployapi", "DeploymentServiceSOAP12port_http"), DeploymentServicePortType.class, features);
    }

    /**
     * 
     * @return
     *     returns DeploymentServicePortType
     */
    @WebEndpoint(name = "DeploymentServiceHttpport")
    public DeploymentServicePortType getDeploymentServiceHttpport() {
        return super.getPort(new QName("http://www.apache.org/ode/deployapi", "DeploymentServiceHttpport"), DeploymentServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns DeploymentServicePortType
     */
    @WebEndpoint(name = "DeploymentServiceHttpport")
    public DeploymentServicePortType getDeploymentServiceHttpport(WebServiceFeature... features) {
        return super.getPort(new QName("http://www.apache.org/ode/deployapi", "DeploymentServiceHttpport"), DeploymentServicePortType.class, features);
    }

}
