{
	"title":"BPMN 2.0",
	"namespace":"http://b3mn.org/stencilset/bpmn2.0#",
	"description":"This is the BPMN 2.0 stencil set specification.",
 	"propertyPackages": [
 		{
 			"name":"baseAttributes",
 			"properties": [
 				{
					"id":"id",
					"type":"String",
					"title":"Id",
					"value":"",
					"description":"This attribute is used to uniquely identify BPMN elements.",
					"description_de":"Definiert eine eindeutig Nummer, um einzelne BPMN-Elemente unterscheiden zu können.",
					"readonly":false,
					"optional":false,
					"length":"50"
				},
				{
					"id":"name",
					"type":"String",
					"title":"Name",
					"value":"",
					"description":"The descriptive name of the BPMN element.",
					"description_de":"Bezeichnung des BPMN-Elementes.",
					"readonly":false,
					"optional":false,
					"length":"",
					"refToView":"text_name",
					"wrapLines":true
				},
				{
					"id":"documentation",
					"type":"Text",
					"title":"Documentation",
					"title_de":"Dokumentation",
					"value":"",
					"description":"This attribute is used to annotate the BPMN element, such as descriptions and other documentation.",
					"description_de":"Der Modellierer kann weiteren Text zur Dokumentation des BPMN-Elementes einfügen.",
					"readonly":false,
					"optional":true,
					"length":"",
					"wrapLines":true
				},
				{
					"id":"auditing",
					"type":"Text",
					"title":"Auditing",
					"title_de":"Prüfung",
					"value":"",
					"description":"A hook for specifying audit related properties. Auditing can only be defined for a Process.",
					"description_de":"",
					"readonly":false,
					"optional":true,
					"length":"",
					"wrapLines":true
				},
				{
					"id":"monitoring",
					"type":"Text",
					"title":"Monitoring",
					"title_de":"Überwachung",
					"value":"",
					"description":"A hook for specifying monitoring related properties. Monitoring can only be defined for a Process.",
					"description_de":"",
					"readonly":false,
					"optional":true,
					"length":"",
					"wrapLines":true
				},
				{
					"id":"bgColor",
					"type":"Color",
					"title":"BackgroundColor",
					"title_de":"Hintergrundfarbe",
					"value":"#ffffff",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"bg_frame",
					"fill":true,
					"stroke":false
				}
 			]
 		},
 		{
 			"name":"catchEventAttributes",
 			"properties":[
 				{
					"id":"eventDefinitionRef",
					"type":"String",
					"title":"EventDefinitionRef",
					"title_de":"EreignisDefinitionsRef",
					"value":"",
					"description":"EventDefinitionRefs (EventDefinition) is an attribute that defines the type of reusable triggers expected for a catch Event.",
					"description_de":"Das Attribut EreignisDefinitionsRef (EreignisDefinition) definiert einen wiederverwendbaren Auslösertyp für ein eintretendes Ereignis.",
					"readonly":false,
					"optional":true,
					"length":"",
					"wrapLines":true
				},
				{
					"id":"eventDefinitions",
					"type":"String",
					"title":"EventDefinitions",
					"title_de":"EreignisDefinitionen",
					"value":"",
					"description":"EventDefinitions (EventDefinition) is an attribute that defines the type of contained triggers expected for a catch Event.",
					"description_de":"Das Attribut EreignisDefinitions (EreignisDefinition) definiert die beinhaltenten Auslöser für ein eintretendes Ereignis.",
					"readonly":false,
					"optional":true,
					"length":"",
					"wrapLines":true
				},
				{
					"id":"dataOutputAssociations",
					"type":"String",
					"title":"DataOutputAssociations",
					"title_de":"DatenAusgangAssoziation",
					"value":"",
					"description":"The Data Associations of the catch Event.",
					"description_de":"Die Daten-Assoziation für ein eintretendes Ereignis.",
					"readonly":false,
					"optional":true,
					"length":"",
					"wrapLines":true
				},
				{
					"id":"dataOutput",
					"type":"String",
					"title":"DataOutput",
					"title_de":"DatenAusgang",
					"value":"",
					"description":"The Data Associations of the catch Event.",
					"description_de":"Die Daten-Assoziation für ein eintretendes Ereignis.",
					"readonly":false,
					"optional":true,
					"length":"",
					"wrapLines":true
				},
				{
					"id":"outputSet",
					"type":"String",
					"title":"OutputSet",
					"title_de":"AusgabeSätze",
					"value":"",
					"description":"The OutputSet for the catch Event.",
					"description_de":"Die Ausgabe-Sätze für ein eintretendes Ereignis.",
					"readonly":false,
					"optional":true,
					"length":"",
					"wrapLines":true
				}
 			]
 		},
 		{
 			"name":"throwEventAttributes",
 			"properties":[
 				{
					"id":"eventDefinitionRef",
					"type":"String",
					"title":"EventDefinitionRef",
					"title_de":"EreignisDefinitionsRef",
					"value":"",
					"description":"EventDefinitionRefs (EventDefinition) is an attribute that defines the type of reusable triggers expected for a catch Event.",
					"description_de":"Das Attribut EreignisDefinitionsRef (EreignisDefinition) definiert einen wiederverwendbaren Auslösertyp für ein eintretendes Ereignis.",
					"readonly":false,
					"optional":true,
					"length":"",
					"wrapLines":true
				},
				{
					"id":"eventDefinitions",
					"type":"String",
					"title":"EventDefinitions",
					"title_de":"EreignisDefinitionen",
					"value":"",
					"description":"EventDefinitions (EventDefinition) is an attribute that defines the type of contained triggers expected for a catch Event.",
					"description_de":"Das Attribut EreignisDefinitions (EreignisDefinition) definiert die beinhaltenten Auslöser für ein eintretendes Ereignis.",
					"readonly":false,
					"optional":true,
					"length":"",
					"wrapLines":true
				},
				{
					"id":"dataInputAssociations",
					"type":"String",
					"title":"DataInputAssociations",
					"title_de":"DatenAusgangAssoziation",
					"value":"",
					"description":"The Data Associations of the throw Event.",
					"description_de":"Die Daten-Assoziation für ein auslösendes Ereignis.",
					"readonly":false,
					"optional":true,
					"length":"",
					"wrapLines":true
				},
				{
					"id":"dataInput",
					"type":"String",
					"title":"DataInput",
					"title_de":"DatenAusgang",
					"value":"",
					"description":"The Data Associations of the throw Event.",
					"description_de":"Die Daten-Assoziation für ein auslösendes Ereignis.",
					"readonly":false,
					"optional":true,
					"length":"",
					"wrapLines":true
				},
				{
					"id":"inputSet",
					"type":"String",
					"title":"InputSet",
					"title_de":"AusgabeSätze",
					"value":"",
					"description":"The InputSet for the throw Event.",
					"description_de":"Die Ausgabe-Sätze für ein auslösendes Ereignis.",
					"readonly":false,
					"optional":true,
					"length":"",
					"wrapLines":true
				}
 			]
 		},
 		{
 			"name":"interrupting",
 			"properties":[
 				{
					"id":"isInterrupting",
					"type":"Boolean",
					"title":"IsInterrupting",
					"title_de":"Blockierend",
					"value":false,
					"description":"This attribute denotes whether the Sub-Process encompassing the Event Sub-Process should be cancelled or not.",
					"description_de":"Dieses Attribut gibt an, ob der umfassende Subprozess abgebrochen werden soll.",
					"inverseBoolean":true,
					"readonly":false,
					"optional":true,
					"refToView": [
						"frame",
						"frame2"
					]
				}
 			]
 		},
		{
			"name" : "diagram",
			"properties" : [
				{
					"id":"version",
					"type":"String",
					"title":"Version",
					"value":"",
					"description":"This defines the Version number of the Diagram.",
					"description_de":"Setzt die Versionsnummer des Diagramms.",
					"readonly":false,
					"optional":true,
					"length":"50"
				},
				{
					"id":"author",
					"type":"String",
					"title":"Author",
					"title_de":"Autor",
					"value":"",
					"description":"This holds the name of the author of the Diagram.",
					"description_de": "Name des Autors des Diagramms.",
					"readonly":false,
					"optional":true,
					"length":"50"
				},
				{
					"id":"language",
					"type":"String",
					"title":"Language",
					"title_de":"Sprache",
					"value":"English",
					"value_de":"Deutsch",
					"description":"This holds the name of the language in which text is written.",
					"description_de":"Sprache, in welcher der Text geschrieben ist.",
					"readonly":false,
					"optional":true,
					"length":"50"
				},
				{
					"id":"expressionLanguage",
					"type":"String",
					"title":"ExpressionLanguage",
					"title_de":"AusdrucksSprache",
					"value":"",
					"description":"A Language may be provided so that the syntax of expressions used in the Diagram can be understood.",
					"description_de":"Sprache, mit welcher im Diagramm verwendete Ausdrücke beschrieben sind.",
					"readonly":false,
					"optional":true,
					"length":"50"
				},
				{
					"id":"queryLanguage",
					"type":"String",
					"title":"QueryLanguage",
					"title_de":"AbfrageSprache",
					"value":"",
					"description":"A Language may be provided so that the syntax of queries used in the Diagram can be understood.",
					"description_de":"Sprache, mit welcher im Diagramm verwendete Abfragen beschrieben sind.",
					"readonly":false,
					"optional":true,
					"length":"50"
				},
				{
					"id":"creationDate",
					"type":"Date",
					"title":"CreationDate",
					"title_de":"Erstellt am",
					"value":"",
					"description":"This defines the date on which the Diagram was created.",
					"description_de":"Datum an dem das Diagramm erstellt wurde.",
					"readonly":false,
					"optional":true,
					"dateFormat":"j/m/y"
				},
				{
					"id":"modificationDate",
					"type":"Date",
					"title":"ModificationDate",
					"title_de":"Geändert am",
					"value":"",
					"description":"This defines the date on which the Diagram was last modified.",
					"description_de":"Datum der letzten Änderung.",
					"readonly":false,
					"optional":true,
					"dateFormat":"j/m/y"
				},
				{
					"id":"pools",
					"type":"String",
					"title":"Pools",
					"value":"",
					"description":"A Business Process Diagram shall contain one or more Pools.",
					"readonly":false,
					"optional":false,
					"length":"50",
					"wrapLines":true
				}
			]
		},
		{
			"name": "flowElement",
			"properties" : [
				{
					"id":"categories",
					"type":"String",
					"title":"Categories",
					"title_de":"Kategorien",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50",
					"wrapLines":true
				}
			]
		},
		{
			"name" : "activity",
			"properties": [
				{
					"id":"startQuantity",
					"type":"Integer",
					"title":"StartQuantity",
					"title_de":"Startanzahl",
					"value":1,
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"min":"1"
				},
				{
					"id":"completionQuantity",
					"type":"Integer",
					"title":"CompletionQuantity",
					"title_de":"Fertigstellungsanzahl",
					"value":1,
					"description":"Defines the number of tokens that must be generated from the activity",
					"description_de":"Legt die Anzahl der Token fest, die von der Aktivität generiert werden müssen.",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"min":"1"
				},
				{	
					"id":"status",
					"type":"Choice",
					"title":"Status",
					"value":"None",
					"description":"The Status of an activity is determined when the activity is being executed by a process engine.",
					"description_de":"Der Status einer Aktivität wird bestimmt, wenn die Aktivität von einer Prozessengine ausgeführt wird.",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"items": [
						{
							"id":"c1",
							"title":"None",
							"value":"None",
							"refToView":"None"
						},
						{
							"id":"c2",
							"title":"Ready",
							"value":"Ready",
							"refToView":"Ready"
						},
						{
							"id":"c3",
							"title":"Active",
							"value":"Active",
							"refToView":"Active"
						},
						{
							"id":"c4",
							"title":"Cancelled",
							"value":"Cancelled",
							"refToView":"Cancelled"
						},
						{
							"id":"c5",
							"title":"Aborting",
							"value":"Aborting",
							"refToView":"Aborting"
						},
						{
							"id":"c6",
							"title":"Aborted",
							"value":"Aborted",
							"refToView":"Aborted"
						},
						{
							"id":"c7",
							"title":"Completing",
							"value":"Completing",
							"refToView":"Completing"
						},
						{
							"id":"c8",
							"title":"Completed",
							"value":"Completed",
							"refToView":"Completed"
						}
					]
				},
				{
					"id":"performers",
					"type":"String",
					"title":"Performers",
					"title_de":"Ausführende",
					"value":"",
					"description":"The Performer attribute defines the resource that will perform or will be responsible for the activity.",
					"description_de":"Das Ausführende Attribut setzt die Ressource, welche die Aktivität ausführen wird oder für sie verantwortlich ist.",
					"readonly": 	false,
					"optional": 	true,
					"length":"",
					"warpLines" : true
				},
				{
					"id":"properties",
					"type":"Complex",
					"title":"Properties",
					"title_de":"Eigenschaften",
					"value":"",
					"description":"Local Properties may be added to the activity. These Properties only apply within the processing of the activity.",
					"description_de":"Lokale Eigenschaften können der Aktivität hinzugefügt werden. Diese werden ausschließlich während der Abarbeitung der Aktivität angewendet.",
					"readonly": 	false,
					"optional": 	false,
					"complexItems": [
						{
							"id":"name",
							"name":"Name",
							"type":"String",
							"value":"",
							"width":100,
							"optional":false 
						},
						{
							"id":"type",
							"name":"Type",
							"name_de":"Typ",
							"type":"String",
							"value":"",
							"width":100,
							"optional":false
						},
						{
							"id":"value",
							"name":"Value",
							"name_de":"Wert",
							"type":"String",
							"value":"",
							"width":100,
							"optional":false
						},
						{
							"id":"correlation",
							"name":"Correlation",
							"name_de":"Korrelation",
							"type":"Boolean",
							"value":"false",
							"width":100,
							"optional":true
						}
					]
				},
				{
					"id":"inputSets",
					"type":"String",
					"title":"InputSets",
					"title_de":"Eingabesätze",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50",
					"wrapLines":true
				},
				{
					"id":"inputs",
					"type":"String",
					"title":"Inputs",
					"title_de":"Eingaben",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50",
					"wrapLines":true
				},
				{
					"id":"outputSets",
					"type":"String",
					"title":"OutputSets",
					"title_de":"Ausgabesätze",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50",
					"wrapLines":true
				},
				{
					"id":"outputs",
					"type":"String",
					"title":"Outputs",
					"title_de":"Ausgaben",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50",
					"wrapLines":true
				},
				{
					"id":"ioRules",
					"type":"String",
					"title":"IORules",
					"title_de":"EA Regeln",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50",
					"wrapLines":true
				},
				{
					"id":"testTime",
					"type":"Choice",
					"title":"TestTime",
					"title_de":"Testzeit",
					"value":"After",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"items": [
						{
							"id":"c1",
							"title":"Before",
							"value":"Before",
							"refToView":""
						},
						{
							"id":"c2",
							"title":"After",
							"value":"After",
							"refToView":""
						}
					]
				},
				{
					"id":"MI_Condition",
					"type":"String",
					"title":"MI_Condition",
					"title_de":"MI_Bedingung",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"length":"50"
				},
				{
					"id":"MI_Ordering",
					"type":"Choice",
					"title":"MI_Ordering",
					"title_de":"MI_Anordnung",
					"value":"Sequential",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"items": [
						{
							"id":"c1",
							"title":"Sequential",
							"value":"Sequential",
							"refToView":""
						},
						{
							"id":"c2",
							"title":"Parallel",
							"value":"Parallel",
							"refToView":""
						}
					]
				},
				{
					"id":"MI_FlowCondition",
					"type":"Choice",
					"title":"MI_FlowCondition",
					"title_de":"MI_Flussbedingung",
					"value":"All",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"items": [
						{
							"id":"c1",
							"title":"None",
							"value":"None",
							"refToView":""
						},
						{
							"id":"c2",
							"title":"One",
							"value":"One",
							"refToView":""
						},
						{
							"id":"c2",
							"title":"All",
							"value":"All",
							"refToView":""
						},
						{
							"id":"c2",
							"title":"Complex",
							"value":"Complex",
							"refToView":""
						}
					]
				},
				{
					"id":"isCompensation",
					"type":"Boolean",
					"title":"is Compensation",
					"title_de":"ist Kompensation",
					"value":false,
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"compensation"
				},
				{
					"id":"assignments",
					"type":"Complex",
					"title":"Assignments",
					"title_de":"Zuweisungen",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"complexItems": [
						{
							"id":"to",
							"name":"To",
							"name_de":"Auf",
							"type":"String",
							"value":"",
							"width":100,
							"optional":false 
						},
						{
							"id":"from",
							"name":"From",
							"name_de":"Aus",
							"type":"String",
							"value":"",
							"width":100,
							"optional":false
						},
						{
							"id":"assigntime",
							"name":"AssignTime",
							"name_de":"Zuweisungszeit",
							"type":"Choice",
							"value":"Start",
							"width":100,
							"optional":true,
							"items": [
								{
									"id":"c1",
									"title":"Start",
									"value":"Start",
									"refToView":""
								},
								{
									"id":"c2",
									"title":"End",
									"value":"End",
									"refToView":""
								}
							]
						}
					]
				},
				{
					"id":"pool",
					"type":"String",
					"title":"Pool",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"length":""
				},
				{
					"id":"lanes",
					"type":"String",
					"title":"Lanes",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"length":""
				},
				{
					"id":"loopType",
					"type":"Choice",
					"title":"LoopType",
					"title_de":"Schleifentyp",
					"value":"None",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"items": [
						{
							"id":"c1",
							"title":"None",
							"value":"None",
							"refToView":"none"
						},
						{
							"id":"c2",
							"title":"Standard",
							"value":"Standard",
							"refToView":"loop"
						},
						{
							"id":"c3",
							"title":"MultiInstance",
							"value":"MultiInstance",
							"refToView":"multiple"
						}
					]
				},
				{
					"id":"loopCondition",
					"type":"String",
					"title":"LoopCondition",
					"title_de":"Schleifenbedingung",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"length":"50"
				},
				{
					"id":"loopCounter",
					"type":"Integer",
					"title":"LoopCounter",
					"title_de":"Schleifenzähler",
					"value":1,
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"min":"0"
				},
				{
					"id":"loopMaximum",
					"type":"Integer",
					"title":"LoopMaximum",
					"title_de":"Schleifenmaximum",
					"value":1,
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"min":"0"
				},
				{
					"id":"callAcitivity",
					"type":"Boolean",
					"title":"is a Call Activity",
					"title_de":"ist eine Call Activity",
					"value":0,
					"description":"",
					"readonly":false,
					"optional":"true",
					"refToView":"callActivity"
				}
			]
		},
		{
			"name" : "task",
			"properties" : [
				{
					"id":"activityType",
					"type":"String",
					"title":"ActivityType",
					"title_de":"Aktivitätstyp",
					"value":"Task",
					"description":"The Type of Activity.",
					"description":"Typ der Aktivität",
					"readonly":true,
					"optional":false,
					"length":""
				},
				{
					"id":"TaskType",
					"type":"Choice",
					"title":"TaskType",
					"title_de":"Tasktyp",
					"value":"None",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"items":[
						{
							"id":"c1",
							"title":"Service",
							"value":"Service",
							"refToView":"serviceTask"
						},
						{
							"id":"c2",
							"title":"Receive",
							"value":"Receive",
							"refToView":"receiveTask"
						},
						{
							"id":"c3",
							"title":"Send",
							"value":"Send",
							"refToView":"sendTask"
						},
						{
							"id":"c4",
							"title":"User",
							"value":"User",
							"refToView":"userTask"
						},
						{
							"id":"c5",
							"title":"Human",
							"value":"Human",
							"refToView":"humanTask"	
						},
						{
							"id":"c6",
							"title":"Business Rule",
							"value":"Business Rule",
							"refToView":"businessRuleTask"
						},
						{
							"id":"c7",
							"title":"Script",
							"value":"Script",
							"refToView":"scriptTask"
						},
						{
							"id":"c8",
							"title":"Manual",
							"value":"Manual",
							"refToView":""
						},
						{
							"id":"c9",
							"title":"Reference",
							"value":"Reference",
							"refToView":""
						},
						{
							"id":"c10",
							"title":"None",
							"value":"None",
							"refToView":"none"
						}
					]
				},
				{
					"id":"InMessage",
					"type":"String",
					"title":"InMessage",
					"title_de":"Eingangsnachricht",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"length":"50"
				},
				{
					"id":"OutMessage",
					"type":"String",
					"title":"OutMessage",
					"title_de":"Ausgangsnachricht",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"length":"50"
				},
				{
					"id":"Implementation",
					"type":"Choice",
					"title":"Implementation",
					"title_de":"Implementierung",
					"value":"Webservice",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"items": [
						{
							"id":"c1",
							"title":"Webservice",
							"value":"Webservice",
							"refToView":""
						},
						{
							"id":"c2",
							"title":"Other",
							"value":"Other",
							"refToView":""
						},
						{
							"id":"c2",
							"title":"Unspecified",
							"value":"Unspecified",
							"refToView":""
						}
					]
				},
				{				
					"id":"ComplexMI_Condition",
					"type":"String",
					"title":"ComplexMI_Condition",
					"title_de":"KomplexeMI Bedingung",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50"
				},
				{
					"id":"MessageRef",
					"type":"String",
					"title":"MessageRef",
					"title_de":"NachrichtRef",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"length":"50"
				},
				{
					"id":"OperationRef",
					"type":"String",
					"title":"OperationRef",
					"title_de":"OperationsRef",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"length":"50"
				},
				{
					"id":"TaskRef",
					"type":"String",
					"title":"TaskRef",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50"
				},	
				{
					"id":"Instantiate",
					"type":"Boolean",
					"title":"Instantiate",
					"title_de":"Instanziieren",
					"value":false,
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":""
				},
				
				{
					"id":"Script",
					"type":"String",
					"title":"Script",
					"title_de":"Skript",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50"
				},
				{
					"id":"bgColor",
					"type":"Color",
					"title":"BackgroundColor",
					"title_de":"Hintergrundfarbe",
					"value":"#ffffcc",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"taskrect",
					"fill":true,
					"stroke":false
				}		
			]
		},
		{
			"name" : "subprocess",
			"properties" : [
				{
					"id": "subProcessType",
					"type": "Choice",
					"title": "subProcessType",
					"title_de":"Subprozesstyp",
					"value": "Embedded",
					"description": "SubProcessType is an attribute that defines whether the Sub-Process details are embedded within the higher level Process or refers to another, re-usable Process. The default is Embedded.",
					"description_de":"Der Subprozesstyp gibt an, ob die Subprozessdetails in einen übergeordneten Prozess eingebettet sind oder auf einen anderen wiederverwendbaren Prozess verweisen.",
					"optional": false,
					"refToView": "",
					"items": [
						{
							"id": "choice1",
							"title":"Embedded",
							"value":"Embedded",
							"refToView": "None"
						},
						{
							"id": "choice2",
							"title": "Independent",
							"value": "Independent",
							"refToView": "None"
						},
						{
							"id": "choice3",
							"title": "Reference",
							"value": "Reference",
							"refToView": "None"
						}
					]
				},
				{
					"id":"isATransaction",
					"type":"Boolean",
					"title":"is a Transaction",
					"title_de":"ist eine Transaktion",
					"value":false,
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"border"
				},
				{
					"id":"transaction",
					"type":"String",
					"title":"TransactionRef",
					"title_de":"TransaktionsRef",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50"
				},
				{
					"id":"isadhoc",
					"type":"Boolean",
					"title":"isAdHoc",
					"title_de":"ist Ad-hoc",
					"value":false,
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"adhoc"
				},
				{
					"id":"AdHocOrdering",
					"type":"Choice",
					"title":"AdHocOrdering",
					"title_de":"Ad-hoc Anordnung",
					"value":"Sequential",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"items": [
						{
							"id":"c1",
							"title":"Sequential",
							"value":"Sequential",
							"refToView":"Sequential"
						},
						{
							"id":"c2",
							"title":"Parallel",
							"value":"Parallel",
							"refToView":"Parallel"
						}
					]
				},
				{
					"id":"AdHocCompletionCondition",
					"type":"String",
					"title":"AdHocCompletionCondition",
					"title_de":"Ad-hoc Fertigstellungsbedingung",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"length":"50"
				},
				{
					"id":"entry",
					"type":"DiagramLink",
					"title":"SubProcessRef",
					"title_de":"SubprozessRef",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"u"
				},
				{
					"id":"diagramRef",
					"type":"String",
					"title":"DiagramRef",
					"title_de":"DiagrammRef",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":""
				},
				{
					"id":"processRef",
					"type":"String",
					"title":"ProcessRef",
					"title_de":"ProzessRef",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":""
				},
				{
					"id":"inputMaps",
					"type":"String",
					"title":"InputMaps",
					"title_de":"Eingabeabbildung",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":""
				},
				{
					"id":"outputMaps",
					"type":"String",
					"title":"OutputMaps",
					"title_de":"Ausgabeabbildung",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":""
				},
				{
					"id":"eventSubprocess",
					"type":"boolean",
					"title":"is a Event-Subproces",
					"title_de":"ist ein Ereignis-Unterprozess",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"taskrect",
					"inverseBoolean":true
				}
			]
		},
		{
			"name" : "gateway",
			"properties" : [
				{
					"id":"assignments",
					"type":"Complex",
					"title":"Assignments",
					"title_de":"Zuweisungen",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"complexItems": [
						{
							"id":"to",
							"name":"To",
							"name_de":"Auf",
							"type":"String",
							"value":"",
							"width":100,
							"optional":false 
						},
						{
							"id":"from",
							"name":"From",
							"name_de":"Aus",
							"type":"String",
							"value":"",
							"width":100,
							"optional":false
						},
						{
							"id":"assigntime",
							"name":"AssignTime",
							"name_de":"Zuweisungszeit",
							"type":"Choice",
							"value":"Start",
							"width":100,
							"optional":true,
							"items": [
								{
									"id":"c1",
									"title":"Start",
									"value":"Start",
									"refToView":""
								},
								{
									"id":"c2",
									"title":"End",
									"value":"End",
									"value_de":"Ende",
									"refToView":""
								}
							]
						}
					]
				},
				{
					"id":"pool",
					"type":"String",
					"title":"Pool",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"length":""
				},
				{
					"id":"lanes",
					"type":"String",
					"title":"Lanes",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"length":""
				},
				{
					"id":"gates",
					"type":"String",
					"title":"Gates",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50",
					"wrapLines":true
				},
				{
					"id":"gates_outgoingSequenceFlow",
					"type":"String",
					"title":"[Gates] OutgoingSequenceFlow",
					"title_de":"[Gates] Ausgehender Steuerfluss",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50",
					"wrapLines":true
				},
				{
					"id":"gates_Assignments",
					"type":"String",
					"title":"[Gates] Assignments",
					"title_de":"[Gates] Zuweisungen",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50",
					"wrapLines":true
				},
				{
					"id":"bgColor",
					"type":"Color",
					"title":"BackgroundColor",
					"title_de":"Hintergrundfarbe",
					"value":"#ffffff",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"frame",
					"fill":true,
					"stroke":false
				}
			]
		}
	],
	"stencils" : [
 		{
			"type":				"node",
			"id":				"BPMNDiagram",
			"title":			"BPMN-Diagram",
			"title_de":			"BPMN-Diagramm",
			"groups":			["Diagram"],
			"description":		"A BPMN Diagram.",
			"view":				"diagram.svg",
			"icon":				"diagram.png",
			"mayBeRoot":		true,
			"hide":				true,
			"propertyPackages" : ["baseAttributes","diagram"],
			"roles":			["canContainArtifacts"]
		},
		{
			"type" : 			"node",
			"id": 				"task",
			"title" : 			"Task",
			"title_de" : 		"Task",
			"groups" : 			["Activities"],
			"groups_de" :		["Aktivitäten"],
			"description" : 	"",
			"description_de" : 	"",
			"view" : 			"activity/task.svg",
			"icon" : 			"new_task.png",
			"propertyPackages" :["baseAttributes","flowElement","activity","task"],
			"roles" : 			[
				"all",
				"ActivitiesMorph"
			]
		},
		{
			"type" : 			"node",
			"id" :				"CollapsedSubprocess",
			"title" : 			"Collapsed Subprocess",
			"title_de" :		"Zugeklappter Unterprozess",
			"groups" :			["Activities"],
			"groups_de" :		["Aktivitäten"],
			"description" :		"A Subprocess is a decomposable activity. It can be collapsed to hide the details.",
			"description_de" :	"Ein Unterprozess ist eine zerlegbare Aktivität. Er kann zugeklappt sein, um Details zu verbergen.",
			"view" :			"activity/collapsed.subprocess.svg",
			"icon" :			"new_subprocess.png",
			"propertyPackages" :["baseAttributes","flowElement","activity","subprocess"],
			"properties" :		[
				{
					"id":"activityType",
					"type":"String",
					"title":"ActivityType",
					"title_de":"Aktivitätstyp",
					"value":"Sub-Process",
					"value_de":"Unterprozess",
					"description":"The Type of Activity.",
					"description":"Typ der Aktivität",
					"readonly":true,
					"optional":false,
					"length":""
				},
				{
					"id":"bgColor",
					"type":"Color",
					"title":"BackgroundColor",
					"title_de":"Hintergrundfarbe",
					"value":"#ffffcc",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"taskrect",
					"fill":true,
					"stroke":false
				}
			],
			"roles": 			[
				"all",
				"sequence_start",
				"sequence_end",
				"messageflow_start",
				"messageflow_end",
				"to_task_event",
				"tc",
				"fromtoall",
				"ActivitiesMorph"
			]
		},
		{
			"type" : 			"node",
			"id" :				"Subprocess",
			"title" :			"Expanded Subprocess",
			"title_de" :		"Aufgeklappter Unterprozess",
			"groups" :			["Activities"],
			"groups_de" :		["Aktivitäten"],
			"description" :		"A Subprocess is a decomposable activity. An Expanded Subprocess contains a valid BPMN diagram.",
			"description_de" :	"Ein Unterprozess ist eine zerlegbare Aktivität. Ein Aufgeklappter Unterprozess enthält ein BPMN Diagramm.",
			"view" :			"activity/expanded.subprocess.svg",
			"icon" :			"new_task.png",
 			"layout" : 			[{"type" : "layout.bpmn11.subprocess"}],
			"propertyPackages" :["baseAttributes","flowElement","activity","subprocess"],
			"properties" :		[
				{
					"id":"activityType",
					"type":"String",
					"title":"ActivityType",
					"title_de":"Aktivitätstyp",
					"value":"Sub-Process",
					"value_de":"Unterprozess",
					"description":"The Type of Activity.",
					"description":"Typ der Aktivität",
					"readonly":true,
					"optional":false,
					"length":""
				},
				{
					"id":"bgColor",
					"type":"Color",
					"title":"BackgroundColor",
					"title_de":"Hintergrundfarbe",
					"value":"white",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":["taskrect","eventSubprocess"],
					"fill":true,
					"stroke":false
				}
			],
			"roles"	:			[
				"all",
				"sequence_start",
				"sequence_end",
				"messageflow_start",
				"messageflow_end",
				"to_task_event",
				"from_task_event",
				"tc",
				"fromtoall",
				"canContainArtifacts",
				"ActivitiesMorph"
			]
		},
		{
			"type" : 			"node",
			"id" :				"Exclusive_Databased_Gateway",
			"title" :			"Data-based Exclusive (XOR) Gateway",
			"title_de" : 		"Daten-basiertes exklusives Gateway",
			"description" :		"When splitting, it routes the sequence flow to exactly one of the outgoing branches based on conditions. When merging, it awaits one incoming branch to complete before triggering the outgoing flow.",
			"description_de" :	"Bei einer Verzweigung wird der Steuerfluss abhÃ¤ngig von Verzweigungsbedingungen zu genau einer ausgehenden Kante geleitet. Bei einer Zusammenführung wird auf eine der eingehenden Kante gewartet, um den ausgehenden Steuerfluss zu aktivieren.",
			"groups" : 			["Gateways"],
			"view" : 			"gateway/xor.databased.svg",
			"icon" : 			"new_gateway_xor_data.png",
			"propertyPackages" :["baseAttributes","flowElement","gateway"],
			"properties" :		[
				{
					"id":"gatewayType",
					"type":"String",
					"title":"GatewayType",
					"title":"GatewayTyp",
					"value":"XOR",
					"description":"",
					"readonly":true,
					"optional":false,
					"length":""
				},
				{
					"id":"xorType",
					"type":"String",
					"title":"XORType",
					"title_de":"XORTyp",
					"value":"Data",
					"description":"",
					"readonly":true,
					"optional":false,
					"length":""
				},
				{
					"id":"markerVisible",
					"type":"Boolean",
					"title":"MarkerVisible",
					"title_de":"Markierung sichtbar",
					"value":"true",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"cross"
				},		
				{
					"id":"defaultGate",
					"type":"String",
					"title":"DefaultGate",
					"title_de":"Standardgate",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50",
					"wrapLines":true
				},
				{
					"id":"gate_outgoingSequenceFlow",
					"type":"String",
					"title":"[Gate] OutgoingSequenceFlow",
					"title_de":"[Gate] Ausgehender Steuerfluss",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50"
				},
				{
					"id":"gate_Assignments",
					"type":"String",
					"title":"[Gate] Assignments",
					"title_de":"[Gates] Zuweisungen",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50",
					"wrapLines":true
				}	
			],
			"roles": 			[
				"all",
				"sequence_start",
				"sequence_end",
				"tc",
				"fromtoall",
				"GatewaysMorph"
			]
		},
		{
			"type" : 			"node",
			"id" : 				"Eventbased_Gateway",
			"title" :			"Event-based Gateway",
			"title_de" :		"Ereignis-basiertes Gateway",
			"groups" :			["Gateways"],
			"description" :		"Each event results in the creation of a new process instance.",
			"description_de" :	"Jedes Ereignis endet mit der Erzeugung einer neuen Prozessinstanz.",
			"view" :			"gateway/eventbased.svg",
			"icon" :			"new_gateway_xor_event.png",
			"propertyPackages" :["baseAttributes","flowElement","gateway"],
			"properties" :		[
				{
					"id":"gatewayType",
					"type":"String",
					"title":"GatewayType",
					"title_de":"Gatewaytyp",
					"value":"XOR",
					"description":"",
					"readonly":true,
					"optional":false,
					"length":""
				},
				{
					"id":"xorType",
					"type":"String",
					"title":"XORType",
					"title_de":"XORTyp",
					"value":"Event",
					"description":"",
					"readonly":true,
					"optional":false,
					"length":""
				},
				{
					"id":"instantiate",
					"type":"Boolean",
					"title":"Instantiate",
					"title_de":"Instanzieren",
					"value":"false",
					"description":"",
					"readonly":false,
					"optional":false,
					"length":""
				}
			],
			"roles":			[
				"all",
				"sequence_end",
				"tc",
				"fromtoall",
				"GatewaysMorph"
			]
		},
		{
			"type" : 			"node",
			"id" : 				"Exclusive_Eventbased_Gateway",
			"title" :			"Event-based Exclusive (XOR) Gateway",
			"title_de" :		"Ereignis-basiertes exklusives Gateway",
			"groups" :			["Gateways"],
			"description" :		"Is always followed by catching events or receive tasks. Sequence flow is routed to the subsequent event/task which happens first.",
			"description_de" :	"Wenn der Steuerfluss verzweigt wird, werden alle ausgehenden Kanten simultan aktiviert. Bei der Zusammenführung wird auf alle eingehenden Kanten gewartet, bevor der ausgehende Steuerfluss aktiviert wird.",
			"view" :			"gateway/xor.eventbased.svg",
			"icon" :			"new_gateway_xor_event.png",
			"propertyPackages" :["baseAttributes","flowElement","gateway"],
			"properties" :		[
				{
					"id":"gatewayType",
					"type":"String",
					"title":"GatewayType",
					"title_de":"Gatewaytyp",
					"value":"XOR",
					"description":"",
					"readonly":true,
					"optional":false,
					"length":""
				},
				{
					"id":"xorType",
					"type":"String",
					"title":"XORType",
					"title_de":"XORTyp",
					"value":"Event",
					"description":"",
					"readonly":true,
					"optional":false,
					"length":""
				},
				{
					"id":"instantiate",
					"type":"Boolean",
					"title":"Instantiate",
					"title_de":"Instanzieren",
					"value":"false",
					"description":"",
					"readonly":false,
					"optional":false,
					"length":""
				}
			],
			"roles":			[
				"all",
				"sequence_end",
				"tc",
				"fromtoall",
				"GatewaysMorph"
			]
		},
		{
			"type" : 			"node",
			"id" :				"AND_Gateway",
			"title" :			"Parallel Gateway",
			"title_de" :		"Paralleles Gateway",
			"groups" :			["Gateways"],
			"description" :		"When used to split the sequence flow, all outgoing branches are activated simultaneously. When merging parallel branches it waits for all incoming branches to complete before triggering the outgoing flow.",
			"description_de" :	"Wenn der Steuerfluss verzweigt wird, werden alle ausgehenden Kanten simultan aktiviert. Bei der Zusammenführung wird auf alle eingehenden Kanten gewartet, bevor der ausgehende Steuerfluss aktiviert wird.",
			"view" :			"gateway/and.svg",
			"icon" :			"new_gateway_and.png",
			"propertyPackages" :["baseAttributes","flowElement","gateway"],
			"properties" : [
				{
					"id":"gatewayType",
					"type":"String",
					"title":"GatewayType",
					"title_de":"Gatewaytyp",
					"value":"AND",
					"description":"",
					"readonly":true,
					"optional":false,
					"length":""
				}
			],
			"roles": 			[
				"all",
				"sequence_start",
				"sequence_end",
				"tc",
				"fromtoall",
				"GatewaysMorph"
			]
		},
		{
			"type" : 			"node",
			"id" :				"Eventbased_AND_Gateway",
			"title" :			"Parallel Event-based Gateway",
			"title_de" :		"Paralleles Ereignisbasiertes Gateway",
			"groups" :			["Gateways"],
			"description" :		"An event either creates a new proces instance or is correlated to an existing instance.",
			"description_de" :	"Ein Ereignis erzeugt entweder eine neue Prozessinstanz oder korreliert zu einer bereits bestehnden.",
			"view" :			"gateway/and.eventbased.svg",
			"icon" :			"new_gateway_and.png",
			"propertyPackages" :["baseAttributes","flowElement","gateway"],
			"properties" : [
				{
					"id":"gatewayType",
					"type":"String",
					"title":"GatewayType",
					"title_de":"Gatewaytyp",
					"value":"AND",
					"description":"",
					"readonly":true,
					"optional":false,
					"length":""
				}
			],
			"roles": 			[
				"all",
				"sequence_start",
				"sequence_end",
				"tc",
				"fromtoall",
				"GatewaysMorph"
			]
		},
		{
			"type" : 			"node",
			"id" :				"OR_Gateway",
			"title" :			"Inclusive Gateway",
			"title_de" :		"Inklusives Gateway",
			"groups" :			["Gateways"],
			"description" :		"When splitting, one or more branches are activated based on branching conditions. When merging, it awaits all active incoming branches to complete.",
			"description_de" :	"Bei einer Verzweigung werden eine oder mehrere Kanten abhÃ¤ngig von Verzweigungsbedingungen aktiviert. Bei einer Vereinigung wird auf alle eingehenden aktiven Kanten gewartet.",
			"view" :			"gateway/or.svg",
			"icon" :			"new_gateway_or.png",
			"propertyPackages" :["baseAttributes","flowElement","gateway"],
			"properties" :		[
				{
					"id":"gatewayType",
					"type":"String",
					"title":"GatewayType",
					"title_de":"Gatewaytyp",
					"value":"OR",
					"description":"",
					"readonly":true,
					"optional":false,
					"length":""
				},
				{
					"id":"defaultGate",
					"type":"String",
					"title":"DefaultGate",
					"title_de":"Standardgate",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50",
					"wrapLines":true
				},
				{
					"id":"gate_outgoingSequenceFlow",
					"type":"String",
					"title":"[Gate] OutgoingSequenceFlow",
					"title_de":"[Gate] Ausgehender Steuerfluss",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50"
				},
				{
					"id":"gate_Assignments",
					"type":"String",
					"title":"[Gate] Assignments",
					"title":"[Gates] Zuweisungen",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50",
					"wrapLines":true
				}
			],
			"roles": 			[
				"all",
				"sequence_start",
				"sequence_end",
				"tc",
				"fromtoall",
				"GatewaysMorph"
			]
		},
		{
			"type": "node",
			"id":"Complex_Gateway",
			"title":"Complex Gateway",
			"title_de":"Komplexes Gateway",
			"groups":["Gateways"],
			"description":"It triggers one or more branches based on complex conditions or verbal descriptions. Use it sparingly as the semantics might not be clear.",
			"description_de":"Eine oder mehrere Kanten werden abhängig von komplexen Bedingungen oder verbalen Beschreibungen aktiviert. Es sollte nur benutzt werden, wenn sich das Verhalten nicht durch andere Gateways ausdrücken lässt.",
			"view":"gateway/complex.svg",
			"icon":"new_gateway_complex.png",
			"propertyPackages" : ["baseAttributes","flowElement","gateway"],
			"properties" : [
				{
					"id":"gatewayType",
					"type":"String",
					"title":"GatewayType",
					"title_de":"Gatewaytyp",
					"value":"Complex",
					"description":"",
					"readonly":true,
					"optional":false,
					"length":""
				},
				{
					"id":"incomingCondition",
					"type":"String",
					"title":"IncomingCondition",
					"title_de":"Eingangsbedingung",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50"
				},
				{
					"id":"outgoingCondition",
					"type":"String",
					"title":"OutgoingCondition",
					"title_de":"Ausgehendebedingung",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50"
				}
			],
			"roles": [
				"all",
				"sequence_start",
				"sequence_end",
				"tc",
				"fromtoall",
				"GatewaysMorph"
			],
		},
		{
			"type" : 			"node",
			"id": 				"StartNoneEvent",
			"title": 			"Start Event",
			"title_de" : 		"Start-Ereignis",
			"groups" : 			["Start Events"],
			"groups_de" : 		["Start-Ereignisse"],
			"description" : 	"Untyped events, typically starts or ends.",
			"description_de" : 	"Untypisierte Ereignisse, i. d. R. am Start oder Ende eines Prozesses.",
			"view" : 			"startevent/none.svg",
			"icon" : 			"catching/none.png",
			"propertyPackages":	[
				"baseAttributes",
				"catchEventAttributes"
			],
			"roles" : [
				"all",
				"StartEventsMorph"
			],
			"properties": [
				{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"title_de":"Auslöser",
					"value":"None",
					"description":"",
					"readonly":true,
					"optional":false,
				}
			]
		},
		{
			"type" :		 	"node",
			"id" :				"StartMessageEvent",
			"title" : 			"Start Message Event",
			"title_de" :		"Start-Nachricht-Ereignis",
			"groups" :			["Start Events"],
			"groups_de" : 		["Start-Ereignisse"],
			"description" :		"Receiving messages.",
			"description_de" :	"Empfang von Nachrichten.",
			"view" :			"startevent/message.svg",
			"icon" :			"catching/message.png",
			"propertyPackages":[
				"baseAttributes",
				"catchEventAttributes",
				"interrupting"
			],
			"roles": [
				"all",
				"StartEventsMorph"
			],
			"properties": [
				{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"title_de":"Auslöser",
					"value":"Message",
					"description":"",
					"readonly":true,
					"optional":false,
				}
			]
		},
		{
			"type" :			"node",
			"id" :				"StartTimerEvent",
			"title" :			"Start Timer Event",
			"title_de" :		"Start-Zeit-Ereignis",
			"groups" :			["Start Events"],
			"groups_de" : 		["Start-Ereignisse"],
			"description" :		"Cyclic timer events, points in time, time spans or timeouts.",
			"description_de" :	"Periodische zeitliche Ereignisse, Zeitpunkte, Zeitspannen oder Zeitüberschreitungen.",
			"view" :			"startevent/timer.svg",
			"icon" :			"catching/timer.png",
			"propertyPackages":[
				"baseAttributes",
				"catchEventAttributes",
				"interrupting"
			],
			"roles" : 			[
				"all",
				"StartEventsMorph"
			],
			"properties": [
				{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"title_de":"Auslöser",
					"value":"Timer",
					"description":"",
					"readonly":true,
					"optional":false,
				}
			]
		},
		{
			"type": "node",
			"id":"StartEscalationEvent",
			"title":"Start Escalation Event",
			"title_de":"Start-Eskalation-Ereignis",
			"groups":["Start Events"],
			"groups_de":["Start-Ereignisse"],
			"description":"",
			"description_de":"",
			"view":"startevent/escalation.svg",
			"icon":"catching/escalation.png",
			"propertyPackages":[
				"baseAttributes",
				"catchEventAttributes",
				"interrupting"
			],
			"roles" : 			[
				"all",
				"StartEventsMorph",
				"sequence_start",
				"sequence_end"
			],
			"properties": [
				{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"title_de":"Auslöser",
					"value":"Escalation",
					"description":"",
					"readonly":true,
					"optional":false,
				}
			]
		},
		{
			"type" : 			"node",
			"id" :				"StartConditionalEvent",
			"title" :			"Start Conditional Event",
			"title_de" :		"Start-Bedingungs-Ereignis",
			"groups" :			["Start Events"],
			"groups_de" :		["Start-Ereignisse"],
			"description" :		"Reacting to changed business conditions or integrating business rules.",
			"description_de" :	"Reaktion auf veränderte Bedingungen oder Regeln.",
			"view" :			"startevent/conditional.svg",
			"icon" 	:			"catching/conditional.png",
			"propertyPackages": [
				"baseAttributes",
				"catchEventAttributes",
				"interrupting"
			],
			"roles" : 			[
				"all",
				"StartEventsMorph"
			],
			"properties": [
				{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"title_de":"Auslöser",
					"value":"Conditional",
					"description":"",
					"readonly":true,
					"optional":false,
				}
			]
		},
		{
			"type": "node",
			"id":"StartErrorEvent",
			"title":"Start Error Event",
			"title_de":"Start-Fehler-Ereignis",
			"groups":["Start Events"],
			"groups_de":["Start-Ereignisse"],
			"description":"Catching named errors.",
			"description_de":"Behandeln von benannten Fehlern.",
			"view":"startevent/error.svg",
			"icon":"catching/error.png",
			"propertyPackages":[
				"baseAttributes",
				"catchEventAttributes"
			],
			"roles": [
				"all",
				"StartEventsMorph"
			],
			"properties": [
				{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"title_de":"Auslöser",
					"value":"Error",
					"description":"",
					"readonly":true,
					"optional":false,
				}
			]
		},
		{
			"type": "node",
			"id":"StartCompensationEvent",
			"title":"Start Compensation Event",
			"title_de":"Start-Kompensierung-Ereignis",
			"groups":["Start Events"],
			"groups_de":["Start-Ereignisse"],
			"description":"Compensation handling.",
			"description_de":"Behandeln von Kompensierung.",
			"view":"startevent/compensation.svg",
			"icon":"catching/compensation.png",
			"propertyPackages":[
				"baseAttributes",
				"catchEventAttributes"
			],
			"roles": [
				"all",
				"StartEventsMorph"
			],
			"properties": [
				{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"title_de":"Auslöser",
					"value":"Compensation",
					"description":"",
					"readonly":true,
					"optional":false,
				}
			]
		},
		{
			"type" : 			"node",
			"id" :				"StartSignalEvent",
			"title" :			"Start Signal Event",
			"title_de" :		"Start-Signal-Ereignis",
			"groups" :			["Start Events"],
			"groups_de" :		["Start-Ereignisse"],
			"description" :		"Signalling across different processes. One signal thrown can be caught multiple times.",
			"description_de" :	"Signalgebung über mehrere Prozesse. Auf ein Signal kann mehrfach reagiert werden.",
			"view" :			"startevent/signal.svg",
			"icon" :			"catching/signal.png",
			"propertyPackages": [
				"baseAttributes",
				"catchEventAttributes",
				"interrupting"
			],
			"roles" : 			[
				"all",
				"StartEventsMorph"
			],
			"properties": [
				{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"title_de":"Auslöser",
					"value":"Signal",
					"description":"",
					"readonly":true,
					"optional":false,
				}
			]
		},
		{
			"type" :		 	"node",
			"id" :				"StartMultipleEvent",
			"title" :			"Start Multiple Event",
			"title_de" :		"Start-Mehrfach-Ereignis",
			"groups" :			["Start Events"],
			"groups_de" :		["Start-Ereignisse"],
			"description" :		"Catching one out of a set of events.",
			"description_de" :	"Eintreten eines von mehreren Ereignissen.",
			"view" :			"startevent/multiple.svg",
			"icon" :			"catching/multiple.png",
			"propertyPackages":[
				"baseAttributes",
				"catchEventAttributes",
				"interrupting"
			],
			"roles" : 			[
				"all",
				"StartEventsMorph"
			],
			"properties": [
				{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"title_de":"Auslöser",
					"value":"Multiple",
					"description":"",
					"readonly":true,
					"optional":false,
				}
			]
		},
		{
			"type": "node",
			"id":"StartParallelMultipleEvent",
			"title":"Start Parallel Multiple Event",
			"title_de":"Start-Parallel-Mehrfach-Ereignis",
			"groups":["Start Events"],
			"groups_de":["Start-Ereignisse"],
			"description":"Multiple triggers are required before Catching one out of a set of events.",
			"description_de":"Eintreten eines von mehreren Ereignissen.",
			"view":"startevent/multiple.parallel.svg",
			"icon":"catching/multiple.parallel.png",
			"propertyPackages":[
				"baseAttributes",
				"catchEventAttributes",
				"interrupting"
			],
			"roles" :			[
				"all",
				"StartEventsMorph"
			],
			"properties": [
				{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"title_de":"Auslöser",
					"value":"Parallel Multiple",
					"description":"",
					"readonly":true,
					"optional":false,
				}
			]
		},
		// Intermediate Events Catching
		{
			"type": "node",
			"id":"IntermediateEvent",
			"title":"Intermediate Event",
			"title_de":"Zwischen-Ereignis",
			"groups":["Catching Intermediate Events"],
			"groups_de":["Eintretende-Zwischen-Ereignisse"],
			"description":"Untyped events, typically showing where the process starts or ends.",
			"description_de":"Untypisierte Ereignisse, i. d. R. am Start oder Ende eines Prozesses.",
			"view":"intermediateevent/none.svg",
			"icon":"intermediate/none.png",
			"propertyPackages":[
				"baseAttributes"
			],
			"roles":[
				"all",
				"sequence_start",
				"sequence_end",
				"IntermediateEventsMorph"
			],
			"properties": [
				{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"title_de":"Auslöser",
					"value":"None",
					"description":"",
					"readonly":true,
					"optional":false,
					"refToView":"",
					"length":""
				}
			]
		},
		{
			"type": "node",
			"id":"IntermediateMessageEventCatching",
			"title":"Intermediate Message Event",
			"title_de":"Zwischen-Nachrichten-Ereignis",
			"groups":["Catching Intermediate Events"],
			"groups_de":["Eintretende-Zwischen-Ereignisse"],
			"description":"Receiving messages.",
			"description_de":"Empfang von Nachrichten.",
			"view":"intermediateevent/message.catching.svg",
			"icon":"catching/message.png",
			"propertyPackages":[
				"baseAttributes",
				"interrupting"
			],
			"roles":[
				"all",
				"sequence_start",
				"sequence_end",
				"IntermediateEventsMorph"
			],
			"properties": [
				{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"title_de":"Auslöser",
					"value":"Message",
					"description":"",
					"readonly":true,
					"optional":false,
					"refToView":"",
					"length":""
				}
			]
		},
		{
			"type": "node",
			"id":"IntermediateTimerEvent",
			"title":"Intermediate Timer Event",
			"title_de":"Zwischen-Zeit-Ereignis",
			"groups":["Catching Intermediate Events"],
			"groups_de":["Eintretende-Zwischen-Ereignisse"],
			"description":"Cyclic timer events, points in time, time spans or timeouts.",
			"description_de":"Periodische zeitliche Ereignisse, Zeitpunkte, Zeitspannen oder Zeitüberschreitungen",
			"view":"intermediateevent/timer.svg",
			"icon":"catching/timer.png",
			"propertyPackages":[
				"baseAttributes",
				"interrupting"
			],
			"roles":[
				"all",
				"sequence_start",
				"sequence_end",
				"IntermediateEventsMorph"
			],
			"properties": [
				{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"title_de":"Auslöser",
					"value":"Timer",
					"description":"",
					"readonly":true,
					"optional":false,
					"refToView":"",
					"length":""
				}
			]
		},
		{
			"type": "node",
			"id":"IntermediateEscalationEvent",
			"title":"Intermediate Escalation Event",
			"title_de":"Zwischen-Eskalations-Ereignis",
			"groups":["Catching Intermediate Events"],
			"groups_de":["Eintretende-Zwischen-Ereignisse"],
			"description":"",
			"description_de":"",
			"view":"intermediateevent/escalation.catching.svg",
			"icon":"catching/escalation.png",
			"propertyPackages":[
				"baseAttributes",
				"catchEventAttributes",
				"interrupting"
			],
			"roles":[
				"all",
				"sequence_start",
				"sequence_end",
				"IntermediateEventsMorph"
			],
			"properties": [
				{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"title_de":"Auslöser",
					"value":"Escalation",
					"description":"",
					"readonly":true,
					"optional":false,
					"refToView":"",
					"length":""
				}
			]
		},
		{
			"type": "node",
			"id":"IntermediateConditionalEvent",
			"title":"Intermediate Conditional Event",
			"title_de":"Zwischen-Bedingung-Ereignis",
			"groups":["Catching Intermediate Events"],
			"groups_de":["Eintretende-Zwischen-Ereignisse"],
			"description":"Reacting to changed business conditions or integrating business rules.",
			"description_de":"Reaktion auf veränderte Bedingungen oder Regeln.",
			"view":"intermediateevent/conditional.svg",
			"icon":"catching/conditional.png",
			"propertyPackages":[
				"baseAttributes",
				"catchEventAttributes",
				"interrupting"
			],
			"roles":[
				"all",
				"sequence_start",
				"sequence_end",
				"IntermediateEventsMorph"
			],
			"properties": [
				{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"title_de":"Auslöser",
					"value":"Rule",
					"description":"",
					"readonly":true,
					"optional":false,
					"refToView":"",
					"length":""
				}
			]
		},
		{
			"type": "node",
			"id":"IntermediateLinkEventCatching",
			"title":"Intermediate Link Event",
			"title_de":"Zwischen-Link-Ereignis",
			"groups":["Catching Intermediate Events"],
			"groups_de":["Eintretende-Zwischen-Ereignisse"],
			"description":"Off-page connectors. Two corresponding link events equal a sequence flow.",
			"description_de":"Auslösendes und eintretendes Link-Ereignis mit gleichem Namen entspricht Steuerfluss.",
			"view":"intermediateevent/link.catching.svg",
			"icon":"catching/link.png",
			"propertyPackages":[
				"baseAttributes",
				"catchEventAttributes"
			],
			"roles":[
				"all",
				"sequence_start",
				"IntermediateEventsMorph"
			],
			"properties": [
				
				{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"title_de":"Auslöser",
					"value":"Link",
					"description":"",
					"readonly":true,
					"optional":false,
					"refToView":"",
					"length":""
				}
			]
		},
		{
			"type": "node",
			"id":"IntermediateErrorEvent",
			"title":"Intermediate Error Event",
			"title_de":"Zwischen-Fehler-Ereignis",
			"groups":["Catching Intermediate Events"],
			"groups_de":["Eintretende-Zwischen-Ereignisse"],
			"description":"Catching named errors.",
			"description_de":"Behandeln von benannten Fehlern.",
			"view":"intermediateevent/error.svg",
			"icon":"catching/error.png",
			"propertyPackages":[
				"baseAttributes",
				"catchEventAttributes"
			],
			"roles":[
				"all",
				"sequence_start",
				"IntermediateEventsMorph"
			],
			"properties": [
				{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"title_de":"Auslöser",
					"value":"Error",
					"description":"",
					"readonly":true,
					"optional":false,
					"refToView":"",
					"length":""
				}
			]
		},
		{
			"type": "node",
			"id":"IntermediateCancelEvent",
			"title":"Intermediate Cancel Event",
			"title_de":"Zwischen-Abbruch-Ereignis",
			"groups":["Catching Intermediate Events"],
			"groups_de":["Eintretende-Zwischen-Ereignisse"],
			"description":"Reacting to cancelled transactions.",
			"description_de":"Reaktion auf abgebrochene Transaktionen.",
			"view":"intermediateevent/cancel.svg",
			"icon":"catching/cancel.png",
			"propertyPackages":[
				"baseAttributes",
				"catchEventAttributes"
			],
			"roles":[
				"all",
				"sequence_start",
				"IntermediateEventsMorph"
			],
			"properties": [
				{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"title_de":"Auslöser",
					"value":"Cancel",
					"description":"",
					"readonly":true,
					"optional":false,
					"refToView":"",
					"length":""
				}
			]
		},
		{
			"type": "node",
			"id":"IntermediateCompensationEventCatching",
			"title":"Intermediate Compensation Event",
			"title_de":"Zwischen-Kompensierung-Ereignis",
			"groups":["Catching Intermediate Events"],
			"groups_de":["Eintretende-Zwischen-Ereignisse"],
			"description":"Compensation handling.",
			"description_de":"Behandeln von Kompensierung.",
			"view":"intermediateevent/compensation.catching.svg",
			"icon":"catching/compensation.png",
			"propertyPackages":[
				"baseAttributes",
				"catchEventAttributes"
			],
			"roles":[
				"all",
				"IntermediateEventsMorph"
			],
			"properties": [
				{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"title_de":"Auslöser",
					"value":"Compensation",
					"description":"",
					"readonly":true,
					"optional":false,
					"refToView":"",
					"length":""
				}
			]
		},
		{
			"type": "node",
			"id":"IntermediateSignalEventCatching",
			"title":"Intermediate Signal Event",
			"title_de":"Zwischen-Signal-Ereignis",
			"groups":["Catching Intermediate Events"],
			"groups_de":["Eintretende-Zwischen-Ereignisse"],
			"description":"Signalling across different processes. One signal thrown can be caught multiple times.",
			"description_de":"Signalgebung über mehrere Prozesse. Auf ein Signal kann mehrfach reagiert werden.",
			"view":"intermediateevent/signal.catching.svg",
			"icon":"catching/signal.png",
			"propertyPackages":[
				"baseAttributes",
				"catchEventAttributes",
				"interrupting"
			],
			"roles":[
				"all",
				"sequence_start",
				"sequence_end",
				"IntermediateEventsMorph"
			],
			"properties": [
				{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"title_de":"Auslöser",
					"value":"Signal",
					"description":"",
					"readonly":true,
					"optional":false,
					"refToView":"",
					"length":""
				}
			]
		},
		{
			"type": "node",
			"id":"IntermediateMultipleEventCatching",
			"title":"Intermediate Multiple Event",
			"title_de":"Zwischen-Mehrfach-Ereignis",
			"groups":["Catching Intermediate Events"],
			"groups_de":["Eintretende-Zwischen-Ereignisse"],
			"description":"Catching one out of a set of events.",
			"description_de":"Eintreten eines von mehreren Ereignissen.",
			"view":"intermediateevent/multiple.catching.svg",
			"icon":"catching/multiple.png",
			"propertyPackages":[
				"baseAttributes",
				"catchEventAttributes",
				"interrupting"
			],
			"roles":[
				"all",
				"sequence_start",
				"sequence_end",
				"IntermediateEventsMorph"
			],
			"properties": [
				{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"title_de":"Auslöser",
					"value":"Multiple",
					"description":"",
					"readonly":true,
					"optional":false,
					"refToView":"",
					"length":""
				}
			]
		},
		{
			"type": "node",
			"id":"IntermediateParallelMultipleEventCatching",
			"title":"Intermediate Parallel Multiple Event",
			"title_de":"Zwischen-Parallel-Mehrfach-Ereignis",
			"groups":["Catching Intermediate Events"],
			"groups_de":["Eintretende-Zwischen-Ereignisse"],
			"description":"",
			"description_de":"",
			"view":"intermediateevent/multiple.parallel.svg",
			"icon":"catching/multiple.parallel.png",
			"propertyPackages":[
				"baseAttributes",
				"catchEventAttributes",
				"interrupting"
			],
			"roles":[
				"all",
				"sequence_start",
				"sequence_end",
				"IntermediateEventsMorph"
			],
			"properties": [
				{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"title_de":"Auslöser",
					"value":"Multiple",
					"description":"",
					"readonly":true,
					"optional":false,
					"refToView":"",
					"length":""
				}
			]
		},
		
		// Intermediate Events Throwing
		
		// End Events
		{
			"type" : "node",
			"id": "EndNoneEvent",
			"title": "End Event",
			"title_de" : "Ende-Ereignis",
			"groups" : ["End Events"],
			"groups_de" : ["Ende-Ereignisse"],
			"description" : "Untyped events, typically starts or ends.",
			"description_de" : "Untypisierte Ereignisse, i. d. R. am Start oder Ende eines Prozesses.",
			"view" : "endevent/none.svg",
			"icon" : "throwing/none.png",
			"propertyPackages":[
				"baseAttributes",
				"throwEventAttributes"
			],
			"roles" : [
				"all",
				"EndEventsMorph"
			],
			"properties": [
				{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"title_de":"Auslöser",
					"value":"None",
					"description":"",
					"readonly":true,
					"optional":false,
				}
			]
		},
		{
			"type": "node",
			"id":"EndMessageEvent",
			"title":"End Message Event",
			"title_de":"Ende-Nachricht-Ereignis",
			"groups":["End Events"],
			"groups_de":["Ende-Ereignisse"],
			"description":"Sending messages.",
			"description_de":"Senden von Nachrichten.",
			"view":"endevent/message.svg",
			"icon":"throwing/message.png",
			"propertyPackages":[
				"baseAttributes",
				"throwingEventAttributes"
			],
			"roles": [
				"all",
				"EndEventsMorph"
			],
			"properties": [
				{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"title_de":"Auslöser",
					"value":"Message",
					"description":"",
					"readonly":true,
					"optional":false,
				}
			]
		},
		{
			"type": "node",
			"id":"EndEscalationEvent",
			"title":"End Escalation Event",
			"title_de":"Ende-Eskalation-Ereignis",
			"groups":["End Events"],
			"groups_de":["Ende-Ereignisse"],
			"description":"",
			"description_de":"",
			"view":"endevent/escalation.svg",
			"icon":"throwing/escalation.png",
			"propertyPackages":[
				"baseAttributes",
				"throwingEventAttributes"
			],
			"roles": [
				"all",
				"EndEventsMorph",
				"sequence_start",
				"sequence_end"
			],
			"properties": [
				{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"title_de":"Auslöser",
					"value":"Escalation",
					"description":"",
					"readonly":true,
					"optional":false,
				}
			]
		},
		{
			"type": "node",
			"id":"EndErrorEvent",
			"title":"End Error Event",
			"title_de":"Ende-Fehler-Ereignis",
			"groups":["End Events"],
			"groups_de":["Ende-Ereignisse"],
			"description":"Throwing named errors.",
			"description_de":"Auslösen von benannten Fehlern.",
			"view":"endevent/error.svg",
			"icon":"throwing/error.png",
			"propertyPackages":[
				"baseAttributes",
				"catchEventAttributes"
			],
			"roles": [
				"all",
				"EndEventsMorph"
			],
			"properties": [
				{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"title_de":"Auslöser",
					"value":"Error",
					"description":"",
					"readonly":true,
					"optional":false,
				}
			]
		},
		{
			"type": "node",
			"id":"EndCancelEvent",
			"title":"Cancel End Event",
			"title_de":"Abbruch-Ende-Ereignis",
			"groups":["End Events"],
			"groups_de":["Ende-Ereignisse"],
			"description":"Triggering cancellation.",
			"description_de":"Auslösen von Abbrüchen.",
			"view":"endevent/cancel.svg",
			"icon":"throwing/cancel.png",
			"propertyPackages":[
				"baseAttributes",
				"catchEventAttributes"
			],
			"roles":[
				"all",
				"sequence_end",
				"EndEventsMorph"
			],
			"properties": [
				{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"title_de":"Auslöser",
					"value":"Cancel",
					"description":"",
					"readonly":true,
					"optional":false,
				}
			]
		},
		{
			"type": "node",
			"id":"EndCompensationEvent",
			"title":"End Compensation Event",
			"title_de":"Ende-Kompensierung-Ereignis",
			"groups":["End Events"],
			"groups_de":["Ende-Ereignisse"],
			"description":"Compensation handling.",
			"description_de":"Auslösen von Kompensierung.",
			"view":"endevent/compensation.svg",
			"icon":"throwing/compensation.png",
			"propertyPackages":[
				"baseAttributes",
				"throwingEventAttributes"
			],
			"roles": [
				"all",
				"EndEventsMorph"
			],
			"properties": [
				{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"title_de":"Auslöser",
					"value":"Compensation",
					"description":"",
					"readonly":true,
					"optional":false,
				}
			]
		},
		{
			"type": "node",
			"id":"EndSignalEvent",
			"title":"End Signal Event",
			"title_de":"Ende-Signal-Ereignis",
			"groups":["End Events"],
			"groups_de":["Ende-Ereignisse"],
			"description":"Signalling across different processes. One signal thrown can be caught multiple times.",
			"description_de":"Signalgebung über mehrere Prozesse. Auf ein Signal kann mehrfach reagiert werden.",
			"view":"endevent/signal.svg",
			"icon":"throwing/signal.png",
			"propertyPackages":[
				"baseAttributes",
				"catchEventAttributes"
			],
			"roles": [
				"all",
				"EndEventsMorph"
			],
			"properties": [
				{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"title_de":"Auslöser",
					"value":"Signal",
					"description":"",
					"readonly":true,
					"optional":false,
				}
			]
		},
		{
			"type": "node",
			"id":"EndMultipleEvent",
			"title":"End Multiple Event",
			"title_de":"Ende-Mehrfach-Ereignis",
			"groups":["End Events"],
			"groups_de":["Ende-Ereignisse"],
			"description":"Throwing one out of a set of events.",
			"description_de":"Auslösen eines von mehreren Ereignissen.",
			"view":"endevent/multiple.svg",
			"icon":"throwing/multiple.png",
			"propertyPackages":[
				"baseAttributes",
				"throwEventAttributes"
			],
			"roles": [
				"all",
				"EndEventsMorph"
			],
			"properties": [
				{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"title_de":"Auslöser",
					"value":"Multiple",
					"description":"",
					"readonly":true,
					"optional":false,
				}
			]
		},
		{
			"type": "node",
			"id":"EndTerminateEvent",
			"title":"Terminate End Event",
			"title_de":"Terminierung-Ende-Ereignis",
			"groups":["End Events"],
			"groups_de":["Ende-Ereignisse"],
			"description":"Triggering the immediate termination of a process.",
			"description_de":"Löst die sofortige Beendigung eines Prozesses aus.",
			"view":"endevent/terminate.svg",
			"icon":"throwing/terminate.png",
			"propertyPackages":[
				"baseAttributes",
				"throwEventAttributes"
			],
			"roles": [
				"all",
				"EndEventsMorph"
			],
			"properties": [
				{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"title_de":"Auslöser",
					"value":"Terminate",
					"description":"",
					"readonly":true,
					"optional":false,
				}
			]
		},
		{
			"type": "edge",
			"id":"SequenceFlow",
			"title":"Sequence Flow",
			"title_de":"Steuerfluss",
			"description":"Sequence Flow defines the execution order of activities.",
			"description_de":"Ein Steuerfluss definiert die Reihenfolge der Ausführung von Aktivitäten.",
			"groups":["Connecting Objects"],
			"groups_de":["Konnektoren"],
			"view":"sequenceflow.svg",
			"icon":"new_sequenceflow.png",
			"roles": [
				"all",
				"ConnectingObjectsMorph"
			]
		}
	],
	
	"rules" : {
		"connectionRules": [
			{
				"role":"SequenceFlow",
				"connects": [
					{
						"from":"sequence_start",
						"to":["sequence_end"]
					},
					{
						"from":"Exclusive_Eventbased_Gateway",
						"to":["FromEventbasedGateway"]
					}
				]
			}
		],
		"containmentRules" : [
			{
				"role" : "BPMNDiagram",
				"contains" : ["all"]
			}
		],
		"morphingRules": [
			{
				"role": "ActivitiesMorph",
				"baseMorphs": ["Task"]
			},
			{
				"role": "GatewaysMorph",
				"baseMorphs": ["Exclusive_Databased_Gateway"]
			},
			{
				"role": "StartEventsMorph",
				"baseMorphs": ["StartNoneEvent"],
				"showInShapeMenu":false
			},
			{
				"role": "IntermediateEventsMorph",
				"baseMorphs": ["IntermediateEvent"]
			},
			{
				"role": "EndEventsMorph",
				"baseMorphs": ["EndNoneEvent"]
			},
			{
				"role": "TextAnnotationMorph",
				"baseMorphs": ["TextAnnotation"]
			},
			{
				"role": "DataObjectMorph",
				"baseMorphs": ["DataObject"]
			},
			{
				"role": "ConnectingObjectsMorph",
				"baseMorphs": ["SequenceFlow"]
			}
		]
	}
}