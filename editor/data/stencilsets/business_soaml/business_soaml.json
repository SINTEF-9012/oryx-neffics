 {
        "title":"Business-SoaML",
        "namespace":"http://b3mn.org/stencilset/business_soaml#",
        "description":"Stencil set for ServiceML diagrams.",
         "stencils": [
		 		{
                        "type":         "node",
                        "id":           "ServicesArchitecture_Diagram",
                        "title":        "ServiceML Services Architecture Diagram",      
                        "groups":       ["ServicesArchitecture"],
                        "description":  "A ServiceML Services Architecture Diagram",
                        "view":         "diagram_servicesarchitecture.svg",
                        "icon":         "diagram_servicesarchitecture.png",
                        "roles":        ["Diagram_ServicesArchitecture"],
						"properties": [
						  		{
                                        "id":"diagram_name",
                                        "type":"String", 
                                        "title":"Name",
                                        "value":"",
                                        "description":"Name of the diagram. NOTE/BUG: if it does not appear, select a node, then select the canvas again.",
                                        "readonly":false,
                                        "optional":false,
                                        "length":"",
                                        "wrapLines":true
                                },
      							{	
									"id":"import",
									"type":"DiagramImport",
									"title":"Import",
									"value":"",
									"description":"External diagrams imported in the model. NOTE/BUG: if it does not appear, select a node, then select the canvas again.",
									"readonly":false,
									"optional":true
                                }
                        ]
            	},
				{
                        "type":         "node",
                        "id":           "participant",
                        "title":        "Participant",   
                        "groups":       ["ServicesArchitecture"],
                        "description":  "A Participant in a Services Architecture",
                        "view":         "participant.svg",
                        "icon":         "participant.png",
                        "roles":        ["participant"],
						"properties": [
                                {
                                        "id":"participant_name",
                                        "type":"String", 
                                        "title":"Name",
                                        "value":"",
                                        "description":"",
                                        "readonly":false,
                                        "optional":false,
                                        "length":"",
                                        "refToView":"participant_name",
                                        "wrapLines":true
                                }
                        ]
				},
				{
						"type":			"node",
						"id":			"conversation",
						"title":		"Conversation",
						"groups":		["ServicesArchitecture"],
						"description":	"A Conversation represents a set of Message Flows and is a container for a (compound) Service Contract.",
						"view":			"conversation.svg",
						"icon":			"conversation.png",
						"roles":		["conversation"],
						"properties": [
								{
										"id":"conversation_name",
										"type":"String",
										"title":"Name",
										"value":"",
										"description":"Name is a text description of the Conversation node element.",
										"readyonly":false,
										"optional":false,
										"length":"",
										"refToView":"text_name",
										"wrapLines":true
								},
								{
										"id": "service_contract_diagram",
										"type": "DiagramLink",
										"title": "ServiceContractRef",
										"value": "",
										"description": "Link to Service Contract diagram.",
										"readonly": false,
										"optional": false,
										"refToView": "u"
				        		}								
						]
				},
				{
                        "type":         "node",
                        "id":           "collaborationuse",
                        "title":        "Collaboration Use",   
                        "groups":       ["ServicesArchitecture"],
                        "description":  "An instanciation of a Service Contract, to connect Participants",
                        "view":         "collaborationuse.svg",
                        "icon":         "collaborationuse.png",
                        "roles":        ["collaborationuse"],
						"properties": [
                                {
                                        "id":"collaborationuse_type",
                                        "type":"ModelElement",
                                        "title":"Type (Service Contract)",
                                        "description":"",
                                        "readonly":false,
                                        "optional":false,
                                        "refToView":"collaborationuse_type",
					"modelElement": ["servicecontract", "compoundservicecontract"],
					"modelElementToView":"servicecontract_name"
                                }
                        ]

				},

		 		{
                        "type":         "node",
                        "id":           "ServiceContract_Diagram",
                        "title":        "Business-SoaML Service Contract Diagram",      
                        "groups":       ["ServiceContract"],
                        "description":  "A Business SoaML Service Contract Diagram",
                        "view":         "diagram_servicecontract.svg",
                        "icon":         "diagram_servicesarchitecture.png",
                        "roles":        ["Diagram_ServiceContract"]
            	},				
				 {
                        "type":         "node",
                        "id":           "servicecontract",
                        "title":        "Service Contract",   
                        "groups":       ["ServiceContract"],
                        "description":  "A Service Contract with two Roles",
                        "view":         "servicecontract.svg",
                        "icon":         "servicecontract.png",
                        "roles":        ["servicecontract", "servicecontractMorph"],
						"properties": [
                                {
                                        "id":"servicecontract_name",
                                        "type":"String", 
                                        "title":"Name",
                                        "value":"",
                                        "description":"",
                                        "readonly":false,
                                        "optional":false,
                                        "length":"",
                                        "refToView":"servicecontract_name",
                                        "wrapLines":true
                                }
                        ]

				},
				 {
                        "type":         "node",
                        "id":           "compoundservicecontract",
                        "title":        "Compound Service Contract",   
                        "groups":       ["ServiceContract"],
                        "description":  "A Service Contract with Roles (more than 2) and Collaboration Uses",
                        "view":         "compoundservicecontract.svg",
                        "icon":         "compoundservicecontract.png",
                        "roles":        ["compountservicecontract", "servicecontractMorph"],
						"properties": [
                                {
                                        "id":"servicecontract_name",
                                        "type":"String", 
                                        "title":"Name",
                                        "value":"",
                                        "description":"",
                                        "readonly":false,
                                        "optional":false,
                                        "length":"",
                                        "refToView":"compoundservicecontract_name",
                                        "wrapLines":true
                                }
                        ]

				},
				{
                        "type":         "node",
                        "id":           "role",
                        "title":        "Role",   
                        "groups":       ["ServiceContract"],
                        "description":  "A Role in a Service Contract",
                        "view":         "role.svg",
                        "icon":         "role.png",
                        "roles":        ["role"],
						"properties": [
                                {
                                        "id":"role_name",
                                        "type":"String", 
                                        "title":"Name",
                                        "value":"",
                                        "description":"",
                                        "readonly":false,
                                        "optional":false,
                                        "length":"",
                                        "refToView":"role_name",
                                        "wrapLines":true
                                },
								                               {
                                        "id":"role_type",
                                        "type":"String", 
                                        "title":"Type",
                                        "value":"",
                                        "description":"",
                                        "readonly":false,
                                        "optional":false,
                                        "length":"",
                                        "refToView":"role_type",
                                        "wrapLines":true
                                },
                                {
										"id":"functions",
										"type":"Complex",
										"title":"Functions",
										"value":"",
										"description":"Functions are specified according to Light-USDL.",
										"readonly":false,
										"optional":true,
										"complexItems": [
											{
												"id":"function_name",
												"name":"Function name",
												"type":"String",
												"value":"",
												"width":200,
												"optional":false 
											},
											{
												"id":"input_type",
												"name":"Input type (Document)",
												"type":"String",
												"value":"",
												"width":200,
												"optional":true
											},
											{
												"id":"return_type",
												"name":"Return type (Document)",
												"type":"String",
												"value":"",
												"width":200,
												"optional":true
											}
										]
								}
                        ]
			},
							{
                        "type":         "node",
                        "id":           "aggregatedrole",
                        "title":        "Aggregated Role",   
                        "groups":       ["ServiceContract"],
                        "description":  "An Aggregated Role in a Compound Service Contract",
                        "view":         "aggregatedrole.svg",
                        "icon":         "aggregatedrole.png",
                        "roles":        ["aggregatedrole"],
						"properties": [
                                {
                                        "id":"role_name",
                                        "type":"String", 
                                        "title":"Name",
                                        "value":"",
                                        "description":"",
                                        "readonly":false,
                                        "optional":false,
                                        "length":"",
                                        "refToView":"aggregatedrole_name",
                                        "wrapLines":true
                                }
                        ]
			},
			{
                    "type":                 "edge",
                    "id":                   "conversationlink_id",
                    "title":                "Conversation Link", 
                    "groups":               ["ServiceArchitecture"],
                    "description":          "Conversation Links are used to connect Conversation nodes to and from Participants.",
                    "view":                 "conversationlink.svg",
                    "icon":                 "conversationlink.png",
                    "roles":                ["conversationlink"]
            },
			{
                    "type":                 "edge",
                    "id":                   "rolebinding",
                    "title":                "Role Binding",     
                    "groups":               ["ServicesArchitecture", "ServiceContract"],
                    "description":          "Binds a Participant (or an Aggregated Role) to a Role of a Service Contract",
                    "view":                 "rolebinding.svg",
                    "icon":                 "rolebinding.png",
                    "roles":                ["rolebinding"],
		   			"properties":	    [
                                {
                                        "id":"rolebinding_role",
                                        "type":"ModelElement",
                                        "title":"Role binding",
                                        "description":"Specify to which Role the binding takes place.",
                                        "readonly":false,
                                        "optional":false,
                                        "refToView":"rolebinding_name",
										"modelElementToView": "role_name",
										"modelElement" : function (selectedElement) {
						// 1. get the collaboration use.
						// 2. get the refered service contract.
						// 3. return the roles of the service contract.

						var collaborationUse = selectedElement.getTarget();
						if ( !collaborationUse || !collaborationUse.getStencil().id().endsWith("#collaborationuse")) {
							collaborationUse = selectedElement.getSource();
						}							

						if (!collaborationUse || !collaborationUse.getStencil().id().endsWith("#collaborationuse")) {
						   	return [];	  // found nothing.
						}

						serviceContractID = collaborationUse.properties["oryx-collaborationuse_type"];
						if (!serviceContractID)
							return [];
							
						// handle the possibility that the referred element is in an imported diagram
						var idx = serviceContractID.indexOf ('.');

						if (idx < 0) {	// not an imported element
							var serviceContract = selectedElement.getCanvas().getChildShapeByResourceId(serviceContractID);

							if (!serviceContract)
						        return [];
	
							return serviceContract.getChildShapes().findAll(function (shape) {
							    result = (shape.getStencil().id().endsWith("#role") || shape.getStencil().id().endsWith("#aggregatedrole"));
						     	return result;
							});
						}
						else {	// imported element: we fetch the element in the imported diagram.
							var modelId = serviceContractID.substring (0, idx);
							var importedServiceContractID = serviceContractID.substring (idx+1);
							var modelInfo = ORYX.Utils.getModelMetaInformation (modelId);
				        	var importedServiceContract = ORYX.Utils.getShapeFromModel (ORYX.Utils.getModel(modelId), importedServiceContractID);

							if (!importedServiceContract || !importedServiceContract.childShapes)
								return [];
							
							// slightly different way of fetching the roles, as we have a data structure and not an object.
							return importedServiceContract.childShapes.findAll (function (shape) {
								result = (shape.stencil.id == "role" || shape.stencil.id == "aggregatedrole");

		       					// This line is a bit of a hack. We need to refer to the modelId here, as it's the 
		       					// only place we have access to it. It's also a way to be consistent with how we refer to
	       						// imported model elements. Maybe a dedicated function somewhere would be better?...
	       						if (result)
	       							shape.resourceId = modelId + "." + shape.resourceId;
	       							
						     	return result;
							});
						}
					}
                                }
				    ]
            },
			{
                    "type":                 "edge",
                    "id":                   "Channel",
                    "title":                "Role Connection",     
                    "groups":               ["ServiceContract"],
                    "description":          "Connects two Roles of a Simple Service Contract",
                    "view":                 "channel.svg",
                    "icon":                 "channel.png",
                    "roles":                ["channel"]
            }
	 ],
	 
	
	
    "rules": {
		"connectionRules": [
			{
				"role":		"conversationlink",
				"connects": [
					{
						"from": "participant",
						"to":	"conversation"
					},
					{
						"from":	"conversation",
						"to":	"participant"
					},
				]
			},
    		{
				"role":     "rolebinding",
 				"connects": [
	                {
	             		"from": "participant",
                        "to":   "collaborationuse"
	                },
	                {
                        "from":   "collaborationuse",
                        "to": "participant"
	                },
	                {
	             		"from": "aggregatedrole",
                        "to":   "collaborationuse"
	                },
	                {
                        "from":   "collaborationuse",
                        "to": "aggregatedrole"
	                }
					
	        	]
			},
			{
	        	"role":     "channel",
	        	"connects": [
	                {
                        "from": "role",
                        "to":   "role"
	                }
		        ]								
			}
		],
	
	    "containmentRules" : [
			{
			     "role" : "Diagram_ServicesArchitecture",
			     "contains" : [
				 	"participant",
				 	"conversation",
					"collaborationuse",
					"servicecontract",
					"compoundservicecontract"
			     ]
			 },
			 {
			     "role" : "Diagram_ServiceContract",
			     "contains" : [
					 "servicecontract"
			     ]
			 },			 
			 {
			     "role" : "servicecontract",
			     "contains" : [
					 "role"
			     ]
			 },
			 {
			     "role" : "compoundservicecontract",
			     "contains" : [
					 "aggregatedrole",
					 "collaborationuse"
			     ]
			 }
		]
		/* it seems that when adding the following, we lose the quick buttons next to the node elements... */
	/*
		,
		"morphingRules": [
		    {
		      "role": "servicecontractMorph",
		      "baseMorphs": ["servicecontract", "compountservicecontract"]
		    }
		]
	*/
	 }
 }
